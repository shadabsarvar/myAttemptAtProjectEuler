"""
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
"""
from math import *
# n th triangle number is n(n+1)/2
def count_divisors(n):       
	c_div = 0
	#div = []
	t_no = n*(n+1)//2
	for i in range(1,int(sqrt(t_no+1))):
		if (t_no%i ==0):
			#div.append(i)
			c_div += 2				# Warning:: Counts Squre roots twice
	return c_div

def high_triangle_no():
	for i in range(2,20000):
		cd= count_divisors(i)
		#print (i,n,sorted(div))
		if (cd > 450):
			print(i, cd, i*(i+1)//2)

high_triangle_no()

# ans is 76576500 for n = 12375 having 576 factors(assuming not a perfect sqruare)